
#include <Dabble.h>
#include <SoftwareSerial.h>
#include <AFMotor.h>

// HC-10 Bluetooth module: TX → D0, RX → D1
SoftwareSerial Bluetooth(0, 1);

// Moteurs
AF_DCMotor motor1(1, MOTOR12_1KHZ);
AF_DCMotor motor2(2, MOTOR12_1KHZ);
AF_DCMotor motor3(3, MOTOR34_1KHZ);
AF_DCMotor motor4(4, MOTOR34_1KHZ);

int Speeed = 255;

void setup() {
  Bluetooth.begin(9600);
  Dabble.begin(Bluetooth);
  Stop(); // Stop au démarrage
}

void loop() {
  Dabble.processInput();

  if (GamePad.isUpPressed()) {
    forward();
  } else if (GamePad.isDownPressed()) {
    back();
  } else if (GamePad.isLeftPressed()) {
    left();
  } else if (GamePad.isRightPressed()) {
    right();
  } else if (GamePad.isTrianglePressed()) {
    topright();
  } else if (GamePad.isSquarePressed()) {
    topleft();
  } else if (GamePad.isCirclePressed()) {
    bottomright();
  } else if (GamePad.isCrossPressed()) {
    bottomleft();
  } else if (GamePad.isSelectPressed()) {
    Stop();
  }
}

// Fonctions moteur
void forward() {
  motor1.setSpeed(Speeed); motor1.run(FORWARD);
  motor2.setSpeed(Speeed); motor2.run(FORWARD);
  motor3.setSpeed(Speeed); motor3.run(FORWARD);
  motor4.setSpeed(Speeed); motor4.run(FORWARD);
}

void back() {
  motor1.setSpeed(Speeed); motor1.run(BACKWARD);
  motor2.setSpeed(Speeed); motor2.run(BACKWARD);
  motor3.setSpeed(Speeed); motor3.run(BACKWARD);
  motor4.setSpeed(Speeed); motor4.run(BACKWARD);
}

void left() {
  motor1.setSpeed(Speeed); motor1.run(BACKWARD);
  motor2.setSpeed(Speeed); motor2.run(BACKWARD);
  motor3.setSpeed(Speeed); motor3.run(FORWARD);
  motor4.setSpeed(Speeed); motor4.run(FORWARD);
}

void right() {
  motor1.setSpeed(Speeed); motor1.run(FORWARD);
  motor2.setSpeed(Speeed); motor2.run(FORWARD);
  motor3.setSpeed(Speeed); motor3.run(BACKWARD);
  motor4.setSpeed(Speeed); motor4.run(BACKWARD);
}

void topleft() {
  motor1.setSpeed(Speeed); motor1.run(FORWARD);
  motor2.setSpeed(Speeed); motor2.run(FORWARD);
  motor3.setSpeed(Speeed / 3.1); motor3.run(FORWARD);
  motor4.setSpeed(Speeed / 3.1); motor4.run(FORWARD);
}

void topright() {
  motor1.setSpeed(Speeed / 3.1); motor1.run(FORWARD);
  motor2.setSpeed(Speeed / 3.1); motor2.run(FORWARD);
  motor3.setSpeed(Speeed); motor3.run(FORWARD);
  motor4.setSpeed(Speeed); motor4.run(FORWARD);
}

void bottomleft() {
  motor1.setSpeed(Speeed); motor1.run(BACKWARD);
  motor2.setSpeed(Speeed); motor2.run(BACKWARD);
  motor3.setSpeed(Speeed / 3.1); motor3.run(BACKWARD);
  motor4.setSpeed(Speeed / 3.1); motor4.run(BACKWARD);
}

void bottomright() {
  motor1.setSpeed(Speeed / 3.1); motor1.run(BACKWARD);
  motor2.setSpeed(Speeed / 3.1); motor2.run(BACKWARD);
  motor3.setSpeed(Speeed); motor3.run(BACKWARD);
  motor4.setSpeed(Speeed); motor4.run(BACKWARD);
}

void Stop() {
  motor1.setSpeed(0); motor1.run(RELEASE);
  motor2.setSpeed(0); motor2.run(RELEASE);
  motor3.setSpeed(0); motor3.run(RELEASE);
  motor4.setSpeed(0); motor4.run(RELEASE);
}
